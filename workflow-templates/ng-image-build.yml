name: Build image 
env:
  PLATFORMS: "linux/amd64"  # CSV-list of platforms to build
  IMAGE_PATH_PREFIX: gcr.io/tao-artefacts/ci-poc/
  IMAGE_NAME: ''
  DOCKERFILE_PATH: ./Dockerfile
  CONTEXT: .
  RELEASE_TAG: latest
  TARGET: ''
### You should not change anything after this line
################################################################################
  GITHUB_SHA: ${{ github.sha }}
  GITHUB_REF: ${{ github.ref }}
on:
  push:
    branches:
    - ci/template-github-action
    # uncomment following line when ok to go live
    #tags: ['.*']
 
jobs:
  build-a:
    runs-on: ubuntu-latest
    steps:
    - name: Identify image name
      if: env.IMAGE_NAME == ''
      run: |
        cat <<EOF >> $GITHUB_ENV
        IMAGE_NAME=$(echo ${{ github.repository }}| sed -e 's@^[a-z0-9][a-z0-9-]*/@@')
        EOF
    - name: Branch build
      if: startsWith(github.ref, 'refs/heads')
      run: |
        cat <<EOF >> $GITHUB_ENV
        TAGS<<EOT
        ${{ env.IMAGE_PATH_PREFIX }}${{ env.IMAGE_NAME }}:${{ env.GITHUB_SHA }}
        ${{ env.IMAGE_PATH_PREFIX }}${{ env.IMAGE_NAME }}:$(echo ${{ env.GITHUB_REF }}| sed -e 's@^refs/heads/@@' -e 's@^[^0-9a-zA-Z_]*@@' -e 's@[^0-9a-zA-Z_.-]@_@g' | head -c128 )
        EOT
        EOF
    - name: Tag release build
      if: startsWith(github.ref, 'refs/tags')
      env:
        REPO: ${{ github.repository }}
        SSH_KEY: ${{ secrets.BUILD_SSH_KEY }}
        REF: ${{ github.ref }}
      run: |
        cat <<EOF >> $GITHUB_ENV
        TAGS<<EOT
        ${{ env.IMAGE_PATH_PREFIX }}${{ env.IMAGE_NAME }}:${{ env.RELEASE_TAG }}
        ${{ env.IMAGE_PATH_PREFIX }}${{ env.IMAGE_NAME }}:${{ env.GITHUB_SHA }}
        ${{ env.IMAGE_PATH_PREFIX }}${{ env.IMAGE_NAME }}:$(echo ${{ env.GITHUB_REF }}| sed -e s@^refs/tags/@@)
        EOT
        EOF
    - name: Clone source code
      uses: actions/checkout@v2

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
      with:
        platforms: ${{ env.PLATFORMS }}

    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1
      with:
        version: latest

    - name: Setup gcloud CLI
      uses: google-github-actions/setup-gcloud@master
      with:
          project_id: ${{ secrets.GCR_PROJECT }}
          service_account_key: ${{ secrets.GCR_SERVICE_KEY }}
          export_default_credentials: true

    # Configure docker to use the gcloud command-line tool as a credential helper
    - run: |
        gcloud auth configure-docker
    - uses: docker/build-push-action@v2
      with:
        context: ${{ env.CONTEXT }}
        file: ${{ env.DOCKERFILE_PATH }}
        platforms: ${{ env.PLATFORMS }}
        target: ${{ env.TARGET }}
        push: true
        cache-from: |
          type=local,src=/tmp/.buildx-cache
          type=registry,ref=${{ env.IMAGE_PATH_PREFIX }}${{ env.IMAGE_NAME }}:latest
        cache-to: |
          type=local,mode=max,dest=/tmp/.buildx-cache
        tags: ${{ env.TAGS }}